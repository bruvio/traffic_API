name: 'Terraform'

on:
  push:
    branches:
      - '*'
    tags:
       - '*-release'
  pull_request:
    branches:
      - 'master'
      - 'production'
      - '*-release'

env:
  TF_LOG: INFO
permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Set the working directory to main for the config files
    defaults:
      run:
        shell: bash
        working-directory: ./deploy/terraform/
    steps:
        # Checkout the repository to the GitHub Actions runner
        - name: Checkout
          uses: actions/checkout@v2

        # Install the preferred version of Terraform CLI 
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            terraform_version: 1.0.10
        - name: Terraform Init
          id: init
          run: terraform init -backend=false
        - name: Terraform Validate
          id: Validate
          run: terraform validate
        - name: Terraform Format
          id: Format
          run: terraform fmt -check

        - name: Terraform Plan
          id: plan
          if: ${{ github.ref != 'refs/heads/master' }}
          # if: github.event_name == 'pull_request'
          run: terraform plan -no-color
        - name: add-plan-comment
          id: comment
          uses: actions/github-script@v3
          if: ${{ github.ref != 'refs/heads/master' }}
          # if: github.event_name == 'pull_request'
          env:
            PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
                const output = `#### Terraform Format and Style \`${{ steps.fmt.outcome }}\`
                #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
                #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
                #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
                <details><summary>Show Plan</summary>
          
                \`\`\`${process.env.PLAN}\`\`\`
          
                </details>
          
                *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
                github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
                })
        - name: Terraform Apply
          if: github.ref == 'refs/heads/master' && github.event_name == 'push'
          run: terraform apply -auto-approve
